
logging:
  level:
    root: INFO
    org:
      springframework:
        boot:
          autoconfigure: ERROR
spring:
    application:
        name: bookings
    jpa:
        defer-datasource-initialization: true
        database-platform: org.hibernate.dialect.MariaDBDialect
        hibernate:
            ddl-auto: create
        show-sql: false
    datasource:
        url: jdbc:mariadb://mariadb-1726227428:3306/booking
        username: ms-saga
        password: ms-saga-pass
        driver-class-name: org.mariadb.jdbc.Driver
    h2:
        console:
            enabled: true
kafka-config:
    producer:
        topic: ${TOPIC_FLIGHT}
        bootstrap-servers: ${KAFKA_SERVER}
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
        topic: ${TOPIC_BOOKING}
        bootstrap-servers: ${KAFKA_SERVER}
        auto-offset-reset: earliest
        group-id: ${KAFKA_GRUPO_1}
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus,metrics"
  endpoint:
    health:
        probes:
          enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
ms:
  messages:
    OK: respuesta exitosa
    BR400: Error en el request
    E500: Error interno
    F401: No se encontro el xxx con id=
    E403: No autorizado
    E409: Ya existe un usuario con el email=